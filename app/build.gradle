plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
}

android {
    namespace 'com.jerry.patient.assessment'
    compileSdk 33

    defaultConfig {
        applicationId "com.jerry.patient.assessment"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xopt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi",
                "-Xopt-in=androidx.lifecycle.compose.ExperimentalLifecycleComposeApi",
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xopt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                "-Xjvm-default=compatibility"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$coreKtx"
    implementation "androidx.activity:activity-compose:$composeActivity"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose"
    implementation "androidx.compose.material3:material3:$material3"

    implementation "com.google.accompanist:accompanist-pager:$accompianist"
    implementation "com.github.SmartToolFactory:Compose-RatingBar:$ratingBar"

    implementation "io.github.raamcosta.compose-destinations:animations-core:$composeDestinations"
    ksp "io.github.raamcosta.compose-destinations:ksp:$composeDestinations"

    implementation "io.insert-koin:koin-android:$koin"
    implementation "io.insert-koin:koin-androidx-compose:$koin"

    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.moshi:moshi:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    annotationProcessor "androidx.room:room-compiler:$room"
    ksp "androidx.room:room-compiler:$room"

    implementation "io.coil-kt:coil-compose:$coil"
    implementation "com.jakewharton.timber:timber:$timber"

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarJdkLib"

    testImplementation "junit:junit:$junit"
    testImplementation "io.mockk:mockk:$ioMock"
    testImplementation "app.cash.turbine:turbine:$turbine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

    androidTestImplementation "androidx.test.ext:junit:$junitExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose"
}